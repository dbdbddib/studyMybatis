<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.mustacheapp.category.CategoryMybatisMapper">
<!-- mapper namespace="풀패키지명"  @Mapper 선언된 클래스의 풀 패키지 명  -->

<!--  id는  CategoryMybatisMapper 클래스의 메소드 이름,  parameterType은 메소드의 매개변수 ( 한개만 가능 )
      , useGeneratedKeys="true" keyProperty="db 컬럼명" 자동 으로 db 컬럼명 의 값을 가져와 증가해주기 위해서 사용   -->
    <insert id="insert" parameterType="CategoryDto" useGeneratedKeys="true" keyProperty="id">
        <!-- <insert id="insert" CategoryMybatisMapper 클래스의 insert 메소드-->
        <!-- parameterType="CategoryDto" insert 메소드 의 매개변수 데이터 타입, 매개변수 1개 -->
        <!-- useGeneratedKeys="true" keyProperty="id컬럼명" id컬럼명의 번호를 증가해주고 리턴도 해준다 -->
        INSERT INTO category_tbl(name)
        VALUES(#{name})
    </insert>

    <update id="update" parameterType="CategoryDto">
        UPDATE category_tbl SET name = #{name}
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        <!-- <delete id="deleteById" CategoryMybatisMapper 클래스의 deleteById 메소드-->
        <!-- {id} 는 기본형 데이터 Long 변수명, 매개변수 ?개 -->
        DELETE FROM category_tbl
        WHERE id = #{id}
    </delete>

    <!-- resultType 은 리턴타입 -->
    <select id="findById" resultType="CategoryDto">
        <!-- <select id="findById" CategoryMybatisMapper 클래스의 findById 메소드-->
        <!-- resultType="CategoryDto" findById 메소드의 return 데이터형 -->
        SELECT id
             , name
        FROM category_tbl
        WHERE id = #{id}
    </select>

    <select id="findByName" resultType="CategoryDto">
        SELECT id
             , name
        FROM category_tbl
        WHERE name = #{name}
    </select>

    <select id="findAll" resultType="CategoryDto">
        SELECT id
             , name
        FROM category_tbl
    </select>

<!--  ${searchName} 문자열 그대로
      #{searchName} 필드값  -->
    <select id="countAllByNameContains" parameterType="SearchCategoryDto" resultType="int">
        SELECT count(*)
        FROM category_tbl
        WHERE name like CONCAT('%',#{searchName},'%')
    </select>

    <select id="findAllByNameContains" parameterType="SearchCategoryDto" resultType="CategoryDto">
        SELECT id
             , name
        FROM category_tbl
        WHERE name like CONCAT('%',#{searchName},'%')
        ORDER BY ${orderByWord}
        LIMIT #{rowsOnePage} OFFSET #{firstIndex}
    </select>
    <!-- #{searchName} : SearchCategoryDto 클래스의 멤버변수 searchName -->
    <!-- ${orderByWord} : SearchCategoryDto 클래스의 멤버변수 orderByWord $ : 문자열 그대로 -->
    <!-- #{rowsOnePage} : SearchCategoryDto 클래스의 멤버변수 rowsOnePage -->
    <!-- #{firstIndex} : SearchCategoryDto 클래스의 멤버변수 firstIndex -->
</mapper>